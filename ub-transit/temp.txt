_HiStOrY_V2_
import\040ask_sdk_core
ask_sdk_core.skill_builder
import\040ask_sdk_core.skill_builder
exit()
import\040datetime
datetime\040-h
exit
exit()
from\040datetime\040import\040datetime
import\040numpy\040as\040np
np.datetime64(datetime.utcnow()).astype(datetime)
np.datetime64(datetime.utcnow()).astype(datetime).minutes
np.datetime64(datetime.utcnow()).astype(datetime).minute
np.datetime64(datetime.utcnow()).astype(datetime).seconds
np.datetime64(datetime.utcnow()).astype(datetime).second
exit()
import\040numpy\040as\040np
exit()
import\040numpy\040as\040np
np.zeros((1,\0401),\040dtype\040=\040'datetime64')
np.zeros((1,\0401),\040dtype\040=\040'datetime64[s]')
import\040time
time.strftime("%H:%M",\040time.gmtime(_.astype(int)/1000000000))
np.zeros((1,\0401),\040dtype\040=\040'datetime64[s]')
time.strftime("%Y:%M",\040time.gmtime(_.astype(int)/1000000000))
time.strftime("%Y:%M",\040_.astype(int)/1000000000))
time.strftime("%Y:%M",\040_.astype(int)/1000000000)
np.zeros((1,\0401),\040dtype\040=\040'datetime64[s]')
time.strftime("%Y:%M",\040_.astype(int)/1000000000)
np.zeros((1,\0401),\040dtype\040=\040'datetime64[s]')
time.strftime("%Y:%M",\040_[0,\0400].astype(int)/1000000000)
save\040=\040np.zeros((1,\0401),\040dtype\040=\040'datetime64[s]')
time.strftime("%Y:%M",\040save[0,\0400].astype(int)/1000000000)
save[0,\0400]
time.gmtime()
save\040=\040np.zeros((1,\0401),\040dtype\040=\040'datetime64[s]')
save[0,\0400].str()
save[0,\0400].astype(str)
save[0,\0400].astype(str)[6:8]
save[0,\0400].astype(str)[9:11]
save[0,\0400].astype(str)[11:3]
save[0,\0400].astype(str)[11:13]
save[0,\0400]\040=\040time()
from\040datetime\040import\040datetime
save[0,\0400]\040=\040datetime.now()
save[0,\0400].astype(str)[11:13]
save[0,\0400].astype(str)[14:16]
exit()
import\040datetime
datetime.datetime.timezone()
datetime.datetime.timezone
datetime.timezone()
datetime.timezone
datetime.timezone(1)
from\040datetime\040import\040datetime
datetime.now(datetime.timezone.)
from\040datetime\040import\040timedelta,\040timezone
datetime.now(datetime.timezone(-timedelta(hours=5)))
datetime.now(timezone(-timedelta(hours=5)))
datetime.now(timezone(-timedelta(hours=4)))
np.datetime64(datetime.now(timezone(-timedelta(hours=4)))).astype(str)[11:\040\040\04013]\040+\040":"\040+\040np.datetime64(datetime.now(timezone(-timedelta(hours=4)))).astype(str)[14:\040\04016]
import\040numpy\040as\040nnp
np.datetime64(datetime.now(timezone(-timedelta(hours=4)))).astype(str)[11:\040\040\04013]\040+\040":"\040+\040np.datetime64(datetime.now(timezone(-timedelta(hours=4)))).astype(str)[14:\040\04016]
import\040numpy\040as\040np
np.datetime64(datetime.now(timezone(-timedelta(hours=4)))).astype(str)[11:\040\040\04013]\040+\040":"\040+\040np.datetime64(datetime.now(timezone(-timedelta(hours=4)))).astype(str)[14:\040\04016]
local\040=\040datetime.now(timezone(-timedelta(hours=4)))
local
exit()
from\040lambda_packages
from\040lambda_packages\040import\040lambda_packages
exit()
from\040lambda_packages\040import\040lambda_packages
exi()
exit()
from\040lambda_packages\040import\040lambda_packages
print(lambda_packages['numpy'])
exit()
intent\040=\040{'slots':\040[{'location':\040'creekside'}]}
intent
intent['slots']
from\040lambda_function\040import\040get_transit
import\040sys
print(sys.path)
from\040ub-transit.lambda_function\040import\040get_transit
exit()
intent\040=\040{'slots':\040[{'location':\040'creekside'}]}
from\040lambda_function\040import\040get_transit
get_transit(intent,\040None)
intent\040=\040{'slots':\040[{'location':\040'creekside'}],\040'name':\040'test'}
get_transit(intent,\040None)
intent\040=\040{'slots':\040[{'location':\040{'value':\040'creekside'}}],\040'name':\040'test'}
get_transit(intent,\040None)
location\040=\040intent['slots']['location']['value']
import\040json
intent\040=\040json.dumps({'slots':\040[{'location':\040{'value':\040'creekside'}}],\040'name':\040'test'})
location\040=\040intent['slots']['location']['value']
intent\040=\040json.dumps({'slots':\040[{'location':\040{'value':\040'creekside'}}],\040'name':\040'test'})
intent
temp\040=\040json.load(intent)
temp\040=\040json.loads(intent)
temp
location\040=\040temp['slots']['location']['value']
intent\040=\040json.dumps({'slots':\040{'location':\040{'value':\040'creekside'}},\040'name':\040'test'})
intent
temp\040=\040json.load(intent)
temp\040=\040json.loads(intent)
temp
location\040=\040temp['slots']['location']['value']
location
get_transit(temp,\040None)
from\040lambda_function\040import\040get_transit
get_transit(temp,\040None)
from\040lambda_function\040import\040get_transit
get_transit(temp,\040None)
from\040lambda_function\040import\040get_transit
get_transit(temp,\040None)
exit)
from\040lambda_function\040import\040get_transit
intent\040=\040json.dumps({'slots':\040{'location':\040{'value':\040'creekside'}},\040'name':\040'test'})
import\040json
intent\040=\040json.dumps({'slots':\040{'location':\040{'value':\040'creekside'}},\040'name':\040'test'})
temp\040=\040json.loads(intent)
get_transit(temp,\040None)
exit()
import\040json
intent\040=\040json.dumps({'slots':\040{'location':\040{'value':\040'creekside'}},\040'name':\040'test'})
temp\040=\040json.loads(intent)
get_transit(temp,\040None)
from\040lambda_function\040import\040get_transit
get_transit(temp,\040None)
from\040lambda_function\040import\040get_transit
import\040json
intent\040=\040json.dumps({'slots':\040{'location':\040{'value':\040'creekside'}},\040'name':\040'test'})
temp\040=\040json.loads(intent)
get_transit(temp,\040None)
import\040readline
readline.write_history_file('.')
readline.write_history_file('temp.txt')
exit()
import\040readline
readline.read_history_file('temp.txt')
import\040ask_sdk_core
ask_sdk_core.skill_builder
import\040ask_sdk_core.skill_builder
exit()
import\040datetime
datetime\040-h
exit
exit()
from\040datetime\040import\040datetime
import\040numpy\040as\040np
np.datetime64(datetime.utcnow()).astype(datetime)
np.datetime64(datetime.utcnow()).astype(datetime).minutes
np.datetime64(datetime.utcnow()).astype(datetime).minute
np.datetime64(datetime.utcnow()).astype(datetime).seconds
np.datetime64(datetime.utcnow()).astype(datetime).second
exit()
import\040numpy\040as\040np
exit()
import\040numpy\040as\040np
np.zeros((1,\0401),\040dtype\040=\040'datetime64')
np.zeros((1,\0401),\040dtype\040=\040'datetime64[s]')
import\040time
time.strftime("%H:%M",\040time.gmtime(_.astype(int)/1000000000))
np.zeros((1,\0401),\040dtype\040=\040'datetime64[s]')
time.strftime("%Y:%M",\040time.gmtime(_.astype(int)/1000000000))
time.strftime("%Y:%M",\040_.astype(int)/1000000000))
time.strftime("%Y:%M",\040_.astype(int)/1000000000)
np.zeros((1,\0401),\040dtype\040=\040'datetime64[s]')
time.strftime("%Y:%M",\040_.astype(int)/1000000000)
np.zeros((1,\0401),\040dtype\040=\040'datetime64[s]')
time.strftime("%Y:%M",\040_[0,\0400].astype(int)/1000000000)
save\040=\040np.zeros((1,\0401),\040dtype\040=\040'datetime64[s]')
time.strftime("%Y:%M",\040save[0,\0400].astype(int)/1000000000)
save[0,\0400]
time.gmtime()
save\040=\040np.zeros((1,\0401),\040dtype\040=\040'datetime64[s]')
save[0,\0400].str()
save[0,\0400].astype(str)
save[0,\0400].astype(str)[6:8]
save[0,\0400].astype(str)[9:11]
save[0,\0400].astype(str)[11:3]
save[0,\0400].astype(str)[11:13]
save[0,\0400]\040=\040time()
from\040datetime\040import\040datetime
save[0,\0400]\040=\040datetime.now()
save[0,\0400].astype(str)[11:13]
save[0,\0400].astype(str)[14:16]
exit()
import\040datetime
datetime.datetime.timezone()
datetime.datetime.timezone
datetime.timezone()
datetime.timezone
datetime.timezone(1)
from\040datetime\040import\040datetime
datetime.now(datetime.timezone.)
from\040datetime\040import\040timedelta,\040timezone
datetime.now(datetime.timezone(-timedelta(hours=5)))
datetime.now(timezone(-timedelta(hours=5)))
datetime.now(timezone(-timedelta(hours=4)))
np.datetime64(datetime.now(timezone(-timedelta(hours=4)))).astype(str)[11:\040\040\04013]\040+\040":"\040+\040np.datetime64(datetime.now(timezone(-timedelta(hours=4)))).astype(str)[14:\040\04016]
import\040numpy\040as\040nnp
np.datetime64(datetime.now(timezone(-timedelta(hours=4)))).astype(str)[11:\040\040\04013]\040+\040":"\040+\040np.datetime64(datetime.now(timezone(-timedelta(hours=4)))).astype(str)[14:\040\04016]
import\040numpy\040as\040np
np.datetime64(datetime.now(timezone(-timedelta(hours=4)))).astype(str)[11:\040\040\04013]\040+\040":"\040+\040np.datetime64(datetime.now(timezone(-timedelta(hours=4)))).astype(str)[14:\040\04016]
local\040=\040datetime.now(timezone(-timedelta(hours=4)))
local
exit()
from\040lambda_packages
from\040lambda_packages\040import\040lambda_packages
exit()
from\040lambda_packages\040import\040lambda_packages
exi()
exit()
from\040lambda_packages\040import\040lambda_packages
print(lambda_packages['numpy'])
exit()
intent\040=\040{'slots':\040[{'location':\040'creekside'}]}
intent
intent['slots']
from\040lambda_function\040import\040get_transit
import\040sys
print(sys.path)
from\040ub-transit.lambda_function\040import\040get_transit
exit()
intent\040=\040{'slots':\040[{'location':\040'creekside'}]}
from\040lambda_function\040import\040get_transit
get_transit(intent,\040None)
intent\040=\040{'slots':\040[{'location':\040'creekside'}],\040'name':\040'test'}
get_transit(intent,\040None)
intent\040=\040{'slots':\040[{'location':\040{'value':\040'creekside'}}],\040'name':\040'test'}
get_transit(intent,\040None)
location\040=\040intent['slots']['location']['value']
import\040json
intent\040=\040json.dumps({'slots':\040[{'location':\040{'value':\040'creekside'}}],\040'name':\040'test'})
location\040=\040intent['slots']['location']['value']
intent\040=\040json.dumps({'slots':\040[{'location':\040{'value':\040'creekside'}}],\040'name':\040'test'})
intent
temp\040=\040json.load(intent)
temp\040=\040json.loads(intent)
temp
location\040=\040temp['slots']['location']['value']
intent\040=\040json.dumps({'slots':\040{'location':\040{'value':\040'creekside'}},\040'name':\040'test'})
intent
temp\040=\040json.load(intent)
temp\040=\040json.loads(intent)
temp
location\040=\040temp['slots']['location']['value']
location
get_transit(temp,\040None)
from\040lambda_function\040import\040get_transit
get_transit(temp,\040None)
from\040lambda_function\040import\040get_transit
get_transit(temp,\040None)
from\040lambda_function\040import\040get_transit
get_transit(temp,\040None)
exit)
from\040lambda_function\040import\040get_transit
intent\040=\040json.dumps({'slots':\040{'location':\040{'value':\040'creekside'}},\040'name':\040'test'})
import\040json
intent\040=\040json.dumps({'slots':\040{'location':\040{'value':\040'creekside'}},\040'name':\040'test'})
temp\040=\040json.loads(intent)
get_transit(temp,\040None)
exit()
import\040json
intent\040=\040json.dumps({'slots':\040{'location':\040{'value':\040'creekside'}},\040'name':\040'test'})
temp\040=\040json.loads(intent)
get_transit(temp,\040None)
from\040lambda_function\040import\040get_transit
get_transit(temp,\040None)
from\040lambda_function\040import\040get_transit
import\040json
intent\040=\040json.dumps({'slots':\040{'location':\040{'value':\040'creekside'}},\040'name':\040'test'})
temp\040=\040json.loads(intent)
get_transit(temp,\040None)
import\040readline
readline.write_history_file('.')
readline.write_history_file('temp.txt')
_
save\040=\040readline.write_history_file('temp.txt')
